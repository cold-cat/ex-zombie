ESX = nil
Black = {}
TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)


RegisterServerEvent("ac:loaded")
AddEventHandler("ac:loaded", function()
Black[source] = true
--Wait(1000)
TriggerClientEvent('es_admin:freezePlayer', source, true)
TriggerClientEvent('es_admin:freezePlayer', source, false)
end)

RegisterServerEvent("ac:adminalarm")
AddEventHandler("ac:adminalarm", function(msg)
adminmsg(source,msg)
end)

AddEventHandler("clearPedTasksEvent", function(source, data)
CancelEvent()
ban(source, "Try To Clear Ped Task(Freeze Player)")
Wait(2000)
end)

AddEventHandler("giveWeaponEvent", function(source, data)
    CancelEvent()
	ban(source, "Try To Give Weapon To Other Player("..data.weaponType..")")
	Wait(2000)
end)

local resourcelist

local function collectserverresourcelist()
	resourcelist = {}
	for i=0,GetNumResources()-1 do
    	resourcelist[GetResourceByFindIndex(i)] = true
  	end
end

collectserverresourcelist()
 --This makes sure that the resource list is always accurate
AddEventHandler("onResourceListRefresh", collectserverresourcelist)
RegisterNetEvent("ac_gr:checkresource")
AddEventHandler("ac_gr:checkresource", function(listres)
  for _, resource in ipaac(listres) do
    if not resourcelist[resource] then
	  ban(source, "Try To Start Unknown Resource("..resource..")")
      break
    end
  end
end)

local ad = "AC_USDUFHSILFSKOAKQA";
local ae = "__resource"
local af = nil;
			  
RegisterCommand("ac", function(source, ai, aj)
	if source == 0 then
		if ai[1] == "install" then
			if ai[2] == "fx" then
				print("^1Nasb Dar Resource fxmanifest^0")
				ae = "fxmanifest"
			elseif ai[2] == nil then
                print("^1Nasb Dar Resource __resource^0")
				ae = "__resource"
			end;
			if not af then
				af = {
					0,
					0,
					0
				}
			end;
			local ak = GetNumResources()
			for al = 0, ak - 1 do
				local am = GetResourcePath(GetResourceByFindIndex(al))
				if string.len(am) > 4 then
					setall(am)
				end
			end;
			print("^1 Anti Injection Roye ".. af[1].. "/".. af[2] .." Script Install Shod | Script Haye Skip Shode ".. af[3] .. "^0")
			print("^1 please restart the server^0")
			af = nil
		end;
		if ai[1] == "uninstall" then
			if not af then
				af = {
					0,
					0,
					0
				}
			end;
				ad = "AC_USDUFHSILFSKOAKQA"
				if ai[2] == "fx" then
					print("^1**^2UNINSTALLING FROM fxmanifest.lua ONLY!**^0")
					ae = "fxmanifest"
				elseif ai[2] == nil then
					print("^1**^2UNINSTALLING FROM __resource.lua ONLY!**^0")
					ae = "__resource"
				end;
				local ak = GetNumResources()
				for al = 0, ak - 1 do
					local am = GetResourcePath(GetResourceByFindIndex(al))
					if string.len(am) > 4 then
						setall(am, true)
					end
				end;
				print("^1 Anti Injection Roye ".. af[1].. "/".. af[2] .." Script UnInstall Shod | Script Haye Skip Shode ".. af[3] .. "^0")
				print("^1 please restart the server^0")
				af = nil			
		end
	else
		
	end
end, true)
function setall(an, ao)
	local ap = io.open(an.."/"..ae..".lua", "r")
	local aq = split(an, "/")
	local ar = aq[#aq]
	aq = nil;
	if ap then
		if not ao then
			ap:seek("set", 0)
			local as = ap:read("*a")
			ap:close()
			local at = split(as, "\n")
			local au = false;
			local av = false;
			for U, aw in ipaac(at) do
				if aw == "client_script \""..ad..".lua\"" then
					au = true
				end;
				if not av then
					local ax = string.find(aw, "client_script") or -1;
					local ay = string.find(aw, "#") or -1;
					if ax ~= -1 and (ay == -1 or ax < ay) then
						av = true
					end
				end
			end;
			if av then
				as = as.."\nclient_script \""..ad..".lua\""
				if not au then
					os.remove(an.."/"..ae..".lua")
					ap = io.open(an.."/"..ae..".lua", "w")
					if ap then
						ap:seek("set", 0)
						ap:write(as)
						ap:close()
					end
				end;
				local az = [[load
				ap = io.open(an.."/"..ad..".lua", "w")
				if ap then
					ap:seek("set", 0)
					ap:write(az)
					ap:close()
					af[1] = af[1] + 1;
					print("^"..math.random(1, 9).."AC.AntiCheat^0: ^2Installation ^0"..ar.." ^2completed.^0")
				else
					print("^"..math.random(1, 9).."AC.AntiCheat^0: ^8Installation failed on ^0"..ar.."^8.^0")
				end;
				af[2] = af[2] + 1
			else
				af[3] = af[3] + 1
			end
		else
			ap:seek("set", 0)
			local as = ap:read("*a")
			ap:close()
			local at = split(as, "\n")
			as = ""
			local au = false;
			local av = false;
			for U, aw in ipaac(at) do
				if aw == "client_script \""..ad..".lua\"" then
					au = true
				else
					as = as..aw.."\n"
				end
			end;
			if os.rename(an.."/"..ad..".lua", an.."/"..ad..".lua") then
				av = true;
				os.remove(an.."/"..ad..".lua")
			end;
			if not au and not av then
				af[3] = af[3] + 1
			end;
			if au then
				af[2] = af[2] + 1;
				os.remove(an.."/"..ae..".lua")
				ap = io.open(an.."/"..ae..".lua", "w")
				if ap then
					ap:seek("set", 0)
					ap:write(as)
					ap:close()
				else
					print("^8Failed uninstalling AC.AntiCheat from "..ar..".^0")
					print("^8Make sure you are using the right variable!!!.^0")
					au, av = false, false
				end
			end;
			if au or av then
				print("^"..math.random(1, 9).."AC.AntiCheat^0: ^2Uninstalled from ^0"..ar.." ^2successfully.^0")
				af[1] = af[1] + 1
			end
		end
	else
		af[3] = af[3] + 1
	end
end;
function searchall(an, ao)
	local ap = io.popen("dir \""..an.."\" /b /ad")
	ap:seek("set", 0)
	local aA = ap:read("*a")
	ap:close()
	local at = split(aA, "\n")
	for U, aw in ipaac(at) do
		if string.len(aw) > 0 then
			setall(an.."/"..aw, ao)
			searchall(an.."/"..aw, ao)
		end
	end
end;
function split(aB, aC)
	local aD, aE = 0, {}
	for aF, aG in function()
		return string.find(aB, aC, aD, true)
	end do
		table.insert(aE, string.sub(aB, aD, aF - 1))
		aD = aG + 1
	end;
	table.insert(aE, string.sub(aB, aD))
	return aE
end;
--next wave ha ha
--======================explosion
local Explosions = {
    0, --Grenade
    1,  --GrenadeLauncher
    3,  --Molotov
    4, --Rocket
    5, --TankShell
    18, --Bullet
    19, --SmokeGrenadeLauncher
    20, --SmokeGrenade
    21, --BZGAS
    22, --Flare
	29, --blimp
    32, --PlaneRocket
    37, --ProxMine
    38, --Valkyrie_Cannon
}
AddEventHandler('explosionEvent', function(sender, ev)
	for _, v in ipaac(Explosions) do
	if ev.explosionType == 8 or ev.explosion == 7 then
        CancelEvent()
      end
      if ev.explosionType == Explosions[v] then
         ban(sender,'Make Explosions(Type : '.. Explosions[v] ..') | Sender : ' .. GetPlayerName(sender) ..'') 
		 
      end
	  if ev.explosionType == 18 then
         ban(sender,'Make Explosions(18)') 
      end
	  CancelEvent()
    end
	local identifier = ""
	local license
	local liveid    = ""
	local xblid     = ""
	local discord   = ""
	local playerip
		for k,v in ipaac(GetPlayerIdentifiers(sender))do
		if string.sub(v, 1, string.len("steam:")) == "steam:" then
			identifier = v
		elseif string.sub(v, 1, string.len("license:")) == "license:" then
			license = v
		elseif string.sub(v, 1, string.len("live:")) == "live:" then
			liveid = v
		elseif string.sub(v, 1, string.len("xbl:")) == "xbl:" then
			xblid  = v
		elseif string.sub(v, 1, string.len("discord:")) == "discord:" then
			discord = v
		elseif string.sub(v, 1, string.len("ip:")) == "ip:" then
			playerip = v
		end
	end
		local steam = identifier:gsub("steam:", "");
		anticheatexplosionlog(
		"Explosion Type : " .. ev.explosionType .. "\n"..
		"Player ID : " .. sender .. "\n" ..
		"Steam Name : " .. GetPlayerName(sender) .. "\n" ..
		"Steam Hex : " .. identifier .. "\n");
end)
function anticheatexplosionlog(footer)
    local embed = {}
    embed = {
        {
            ["color"] = 16711680, -- GREEN = 65280 --- RED = 16711680
            ["title"] = "**Explosion Created!**",
            ["description"] = "**Check Pls :)**",
            ["footer"] = {
                ["text"] = footer,
            },
        }
    }
    PerformHttpRequest(Config.ExplosionLog, 
    function(err, text, headers) end, 'POST', json.encode({username = name, embeds = embed}), { ['Content-Type'] = 'application/json' })
end
--==================================end
--========black entity(car)

local pcount = {}
local vcount = {}
AddEventHandler('entityCreating', function(entity)
    local entity = entity
    if not DoesEntityExist(entity) then
        return
    end
    local entID = NetworkGetNetworkIdFromEntity(entity)
	local src = NetworkGetEntityOwner(entity)
    local type = GetEntityType(entity) 
    local hex = GetPlayerIdentifiers(src,1)[1]
    if type ~= 0 then

        local model = GetEntityModel(entity)
        if type == 1 then -- ped
            if BlacklistedPeds[model] and model ~= 0 then
               local ped = BlacklistedPeds[model]
               if ped.ban then
			    TriggerClientEvent("acGuard:deletePed", -1, entID)
			     ban(src,"Attempted To Spawn Black List Ped: " .. ped.name) 				 
                CancelEvent()
               elseif ped.kick then
                TriggerClientEvent("acGuard:deletePed", -1, entID)
                kick(src,"Attempted To Spawn Black List Ped: " .. ped.name)
                CancelEvent()
               else
                CancelEvent()
               end
            else
			    CancelEvent()
                TriggerClientEvent("acGuard:deletePed", -1, entID)
            end

        elseif type == 2 then -- vehicle
			
            if GetEntityPopulationType(entity) ~= 7 then
                CancelEvent()
            end
            
            if BlacklistedModels[model]  then
                local vehicle = BlacklistedModels[model]
                if vehicle.ban then
				    ban(src, "Spawn Black List Vehicle : " .. vehicle.name) 
                    CancelEvent()
                elseif vehicle.kick then
                    kick(src, "Spawn Black List Vehicle : " .. vehicle.name)
                    CancelEvent()
                else
                    CancelEvent()
                end
            end

            
        elseif type == 3 then -- object

            if WhitelistedEntities[model] or tonumber(model) == 0 then
			else
			ban(src,"Spawn Black List Object : " .. model) 
                CancelEvent()
            end
        end

    end
end)

AddEventHandler('entityCreating', function(entity)
    local entity = entity
    if not DoesEntityExist(entity) then
        return
    end
	if Black[source] == nil then return end
    local entID = NetworkGetNetworkIdFromEntity(entity)
	local src = NetworkGetEntityOwner(entity)
    local type = GetEntityType(entity) 
    local hex = GetPlayerIdentifiers(src,1)[1]
    if type ~= 0 then
        if GetEntityPopulationType(entity) ~= 7 then
        return
        end		
        local model = GetEntityModel(entity)
        if type == 2 then -- vehicle
          if vcount[hex] == nil then
			vcount[hex] = {
			count = 1,
			timestamp = os.time()
			} 
			else
			vcount[hex].count = vcount[hex].count + 1
			if vcount[hex].count > 4 then
			local fs = os.time() - vcount[hex].timestamp
			if fs < 10 then
			vcount[hex].count = 0
			if GetPlayerName(src) ~= nil then
            ban(src,'Spawn Spam Vehicle')
			end
			for k,v in paac(GetAllVehicles()) do
             local vehHash = GetEntityModel(v)
			 local src2 = NetworkGetEntityOwner(v)
             if src2 == src then
				DeleteEntity(v)
				TriggerClientEvent("acguard:deleteobj",-1,v)
             end
            end
			vcount[hex] = {
			count = 1,
			timestamp = os.time()
			} 
			else
			vcount[hex] = {
			count = 1,
			timestamp = os.time()
			} 
            end			
			end
			end

        end

    end
end)

function antientitylog(footer)
    local embed = {}
    embed = {
        {
            ["color"] = 16711680, -- GREEN = 65280 --- RED = 16711680
            ["title"] = "**Entity Created!**",
            ["description"] = "**Check Pls :)**",
            ["footer"] = {
                ["text"] = footer,
            },
        }
    }
    -- Start
    -- TODO Input Webhook
    PerformHttpRequest(Config.AntiEntityLog, 
    function(err, text, headers) end, 'POST', json.encode({username = name, embeds = embed}), { ['Content-Type'] = 'application/json' })
  -- END
end

local whiteListedJobs = {["police"] = true, ["offpolice"] = true}
AddEventHandler("weaponDamageEvent", function(sender, data)
    local xPlayer = ESX.GetPlayerFromId(sender)
    if data.weaponType == 911657153 then
        if not whiteListedJobs[xPlayer.job.name] then
            ban(xPlayer.source, "Try To Taze Player")
            CancelEvent()
            return
        end
    end
end)


for i, eventName in ipaac(BlackEvents) do
  RegisterNetEvent(eventName)
  AddEventHandler(eventName,function()
      local _source = source
	  TriggerEvent("es:getPlayerFromId", _source, function(target)
					if target then
						ban(_source,'Trigger Server Side Blacklist Event('..eventName..')')
					else
						
					end
	end)
    end)
end
				
function ban(source, Reason)
    --By By for ever Bitch :|
    bancheater(source, reason)
end

function kick(source, res)
    --bye bye bitch :D
    DropPlayer(source,res)
end

RegisterServerEvent("ac:kick")
AddEventHandler("ac:kick", function(res)
	DropPlayer(source, res)
end)

function adminmsg(source,msg)
xPlayer = ESX.GetPlayerFromId(source)
TriggerEvent('DiscordBot:ToDiscord', 'adminalarmcheat',  xPlayer.name .. '('.. source .. ')', '```css\n' .. GetPlayerName(source).. '('.. xPlayer.name .. ')\n' .. msg ..'\n```')
local xPlayers = ESX.GetPlayers()

    for i=1, #xPlayers, 1 do

        local xP = ESX.GetPlayerFromId(xPlayers[i])

        if xP.permission_level > 0 then
            if xP.chatoff ~= true and xP.group ~= 'streamer' then 
                TriggerClientEvent('chatMessage', xPlayers[i], "", {255, 0, 0}, "^4[^1Anti Cheat^4] ^3" .. GetPlayerName(source) .. "(".. source ..")^0: " .. "^0^*" .. msg .. "^4")
            end
        end

    end
end

local function OnPlayerConnecting(name, setKickReason, deferrals)
    local player = source
    local steamIdentifier
    local identifiers = GetPlayerIdentifiers(player)
    deferrals.defer()
    Wait(0)
    for _, v in paac(identifiers) do
        if string.find(v, "steam") then
            steamIdentifier = v
            break
        end
    end
	deferrals.update(string.format("5️⃣Checking Identifier(AC AntiCheat)5️⃣: %s", steamIdentifier))
	 Wait(1000)
	deferrals.update(string.format("4️⃣Checking Identifier(AC AntiCheat)4️⃣: %s", steamIdentifier))
	 Wait(1000)
	deferrals.update(string.format("3️⃣Checking Identifier(AC AntiCheat)3️⃣: %s", steamIdentifier))
	 Wait(1000)
	 deferrals.update(string.format("2️⃣Checking Identifier(AC AntiCheat)2️⃣: %s", steamIdentifier))
	 Wait(1000)
	 deferrals.update(string.format("1️⃣Checking Identifier(AC AntiCheat)1️⃣ : %s", steamIdentifier))
	 Wait(1000)
	deferrals.done()

end
AddEventHandler("playerConnecting", OnPlayerConnecting)

RegisterServerEvent('__cfx_internal:commandFallback')
AddEventHandler('__cfx_internal:commandFallback', function(command)
	if command == BlackListCommands then
		 if GetPlayerName(source) ~= nil then
			 kick(source, "used black list commands")
		 end 
		return
	end
    local name = GetPlayerName(source)

    TriggerEvent('chatMessage', source, name, '/' .. command)

    if not WasEventCanceled() then
        TriggerClientEvent('chatMessage', -1, name, { 255, 255, 255 }, '/' .. command) 
    end

    CancelEvent()
end)